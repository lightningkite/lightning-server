"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Modification = void 0;
// Package: com.lightningkite.lightningdb
// Generated by Khrysalis - this file will be overwritten.
const Condition_1 = require("./Condition");
const TProperty1Extensions_1 = require("./TProperty1Extensions");
const khrysalis_runtime_1 = require("@lightningkite/khrysalis-runtime");
const iter_tools_es_1 = require("iter-tools-es");
//! Declares com.lightningkite.lightningdb.Modification
class Modification {
    constructor() {
    }
    hashCode() { throw undefined; }
    equals(other) { throw undefined; }
    invoke(on) { throw undefined; }
    invokeDefault() { throw undefined; }
    then(other) {
        return new Modification.Chain([this, other]);
    }
}
exports.Modification = Modification;
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.Chain
    class Chain extends Modification {
        constructor(modifications) {
            super();
            this.modifications = modifications;
        }
        static propertyTypes(T) { return { modifications: [Array, [Modification, T]] }; }
        invoke(on) {
            return (0, iter_tools_es_1.reduce)(on, (item, mod) => (mod.invoke(item)), this.modifications);
        }
        invokeDefault() {
            const on = this.modifications[0].invokeDefault();
            return (0, iter_tools_es_1.reduce)(on, (item, mod) => (mod.invoke(item)), this.modifications.slice(1));
        }
    }
    Chain.properties = ["modifications"];
    Modification.Chain = Chain;
    (0, khrysalis_runtime_1.setUpDataClass)(Chain);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.IfNotNull
    class IfNotNull extends Modification {
        constructor(modification) {
            super();
            this.modification = modification;
        }
        static propertyTypes(T) { return { modification: [Modification, T] }; }
        invoke(on) {
            return (() => {
                if (on === null) {
                    return null;
                }
                return ((it) => (this.modification.invoke(it)))(on);
            })();
        }
        invokeDefault() {
            return null;
        }
    }
    IfNotNull.properties = ["modification"];
    Modification.IfNotNull = IfNotNull;
    (0, khrysalis_runtime_1.setUpDataClass)(IfNotNull);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.Assign
    class Assign extends Modification {
        constructor(value) {
            super();
            this.value = value;
        }
        static propertyTypes(T) { return { value: T }; }
        invoke(on) {
            return this.value;
        }
        invokeDefault() {
            return this.value;
        }
    }
    Assign.properties = ["value"];
    Modification.Assign = Assign;
    (0, khrysalis_runtime_1.setUpDataClass)(Assign);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.CoerceAtMost
    class CoerceAtMost extends Modification {
        constructor(value) {
            super();
            this.value = value;
        }
        static propertyTypes(T) { return { value: T }; }
        invoke(on) {
            return (0, khrysalis_runtime_1.cMin)(on, this.value);
        }
        invokeDefault() {
            return this.value;
        }
    }
    CoerceAtMost.properties = ["value"];
    Modification.CoerceAtMost = CoerceAtMost;
    (0, khrysalis_runtime_1.setUpDataClass)(CoerceAtMost);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.CoerceAtLeast
    class CoerceAtLeast extends Modification {
        constructor(value) {
            super();
            this.value = value;
        }
        static propertyTypes(T) { return { value: T }; }
        invoke(on) {
            return (0, khrysalis_runtime_1.cMax)(on, this.value);
        }
        invokeDefault() {
            return this.value;
        }
    }
    CoerceAtLeast.properties = ["value"];
    Modification.CoerceAtLeast = CoerceAtLeast;
    (0, khrysalis_runtime_1.setUpDataClass)(CoerceAtLeast);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.Increment
    class Increment extends Modification {
        constructor(by) {
            super();
            this.by = by;
        }
        static propertyTypes(T) { return { by: T }; }
        invoke(on) {
            return (on + this.by);
        }
        invokeDefault() {
            return this.by;
        }
    }
    Increment.properties = ["by"];
    Modification.Increment = Increment;
    (0, khrysalis_runtime_1.setUpDataClass)(Increment);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.Multiply
    class Multiply extends Modification {
        constructor(by) {
            super();
            this.by = by;
        }
        static propertyTypes(T) { return { by: T }; }
        invoke(on) {
            return (on * this.by);
        }
        invokeDefault() {
            return (() => {
                if (typeof (this.by) === "number") {
                    return 0;
                }
                else if (typeof (this.by) === "number") {
                    return 0;
                }
                else if (typeof (this.by) === "number") {
                    return 0;
                }
                else if (typeof (this.by) === "number") {
                    return 0;
                }
                else if (typeof (this.by) === "number") {
                    return 0;
                }
                else if (typeof (this.by) === "number") {
                    return 0.0;
                }
                else {
                    throw undefined;
                }
            })();
        }
    }
    Multiply.properties = ["by"];
    Modification.Multiply = Multiply;
    (0, khrysalis_runtime_1.setUpDataClass)(Multiply);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.AppendString
    class AppendString extends Modification {
        constructor(value) {
            super();
            this.value = value;
        }
        static propertyTypes() { return { value: [String] }; }
        invoke(on) {
            return on + this.value;
        }
        invokeDefault() {
            return this.value;
        }
    }
    AppendString.properties = ["value"];
    Modification.AppendString = AppendString;
    (0, khrysalis_runtime_1.setUpDataClass)(AppendString);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.ListAppend
    class ListAppend extends Modification {
        constructor(items) {
            super();
            this.items = items;
        }
        static propertyTypes(T) { return { items: [Array, T] }; }
        invoke(on) {
            return on.concat(this.items);
        }
        invokeDefault() {
            return this.items;
        }
    }
    ListAppend.properties = ["items"];
    Modification.ListAppend = ListAppend;
    (0, khrysalis_runtime_1.setUpDataClass)(ListAppend);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.ListRemove
    class ListRemove extends Modification {
        constructor(condition) {
            super();
            this.condition = condition;
        }
        static propertyTypes(T) { return { condition: [Condition_1.Condition, T] }; }
        invoke(on) {
            return on.filter((it) => ((!this.condition.invoke(it))));
        }
        invokeDefault() {
            return [];
        }
    }
    ListRemove.properties = ["condition"];
    Modification.ListRemove = ListRemove;
    (0, khrysalis_runtime_1.setUpDataClass)(ListRemove);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.ListRemoveInstances
    class ListRemoveInstances extends Modification {
        constructor(items) {
            super();
            this.items = items;
        }
        static propertyTypes(T) { return { items: [Array, T] }; }
        invoke(on) {
            return (0, khrysalis_runtime_1.xIterableMinusMultiple)(on, this.items);
        }
        invokeDefault() {
            return [];
        }
    }
    ListRemoveInstances.properties = ["items"];
    Modification.ListRemoveInstances = ListRemoveInstances;
    (0, khrysalis_runtime_1.setUpDataClass)(ListRemoveInstances);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.ListDropFirst
    class ListDropFirst extends Modification {
        constructor() {
            super();
        }
        invoke(on) {
            return on.slice(1);
        }
        invokeDefault() {
            return [];
        }
        hashCode() {
            return 1;
        }
        equals(other) {
            return ((0, khrysalis_runtime_1.tryCastClass)(other, Modification.ListDropFirst)) !== null;
        }
    }
    Modification.ListDropFirst = ListDropFirst;
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.ListDropLast
    class ListDropLast extends Modification {
        constructor() {
            super();
        }
        invoke(on) {
            return on.slice(0, -1);
        }
        invokeDefault() {
            return [];
        }
        hashCode() {
            return 1;
        }
        equals(other) {
            return ((0, khrysalis_runtime_1.tryCastClass)(other, Modification.ListDropLast)) !== null;
        }
    }
    Modification.ListDropLast = ListDropLast;
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.ListPerElement
    class ListPerElement extends Modification {
        constructor(condition, modification) {
            super();
            this.condition = condition;
            this.modification = modification;
        }
        static propertyTypes(T) { return { condition: [Condition_1.Condition, T], modification: [Modification, T] }; }
        invoke(on) {
            return on.map((it) => (this.condition.invoke(it) ? this.modification.invoke(it) : it));
        }
        invokeDefault() {
            return [];
        }
    }
    ListPerElement.properties = ["condition", "modification"];
    Modification.ListPerElement = ListPerElement;
    (0, khrysalis_runtime_1.setUpDataClass)(ListPerElement);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.SetAppend
    class SetAppend extends Modification {
        constructor(items) {
            super();
            this.items = items;
        }
        static propertyTypes(T) { return { items: [Set, T] }; }
        invoke(on) {
            return (new khrysalis_runtime_1.EqualOverrideSet([...on, ...this.items]));
        }
        invokeDefault() {
            return this.items;
        }
    }
    SetAppend.properties = ["items"];
    Modification.SetAppend = SetAppend;
    (0, khrysalis_runtime_1.setUpDataClass)(SetAppend);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.SetRemove
    class SetRemove extends Modification {
        constructor(condition) {
            super();
            this.condition = condition;
        }
        static propertyTypes(T) { return { condition: [Condition_1.Condition, T] }; }
        invoke(on) {
            return new khrysalis_runtime_1.EqualOverrideSet((0, iter_tools_es_1.execPipe)(on, (0, iter_tools_es_1.filter)((it) => ((!this.condition.invoke(it)))), iter_tools_es_1.toArray));
        }
        invokeDefault() {
            return new khrysalis_runtime_1.EqualOverrideSet([]);
        }
    }
    SetRemove.properties = ["condition"];
    Modification.SetRemove = SetRemove;
    (0, khrysalis_runtime_1.setUpDataClass)(SetRemove);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.SetRemoveInstances
    class SetRemoveInstances extends Modification {
        constructor(items) {
            super();
            this.items = items;
        }
        static propertyTypes(T) { return { items: [Set, T] }; }
        invoke(on) {
            return new khrysalis_runtime_1.EqualOverrideSet([...on].filter(x => !this.items.has(x)));
        }
        invokeDefault() {
            return new khrysalis_runtime_1.EqualOverrideSet([]);
        }
    }
    SetRemoveInstances.properties = ["items"];
    Modification.SetRemoveInstances = SetRemoveInstances;
    (0, khrysalis_runtime_1.setUpDataClass)(SetRemoveInstances);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.SetDropFirst
    class SetDropFirst extends Modification {
        constructor() {
            super();
        }
        invoke(on) {
            return new khrysalis_runtime_1.EqualOverrideSet((0, iter_tools_es_1.toArray)(on).slice(1));
        }
        invokeDefault() {
            return new khrysalis_runtime_1.EqualOverrideSet([]);
        }
        hashCode() {
            return 1;
        }
        equals(other) {
            return ((0, khrysalis_runtime_1.tryCastClass)(other, Modification.SetDropFirst)) !== null;
        }
    }
    Modification.SetDropFirst = SetDropFirst;
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.SetDropLast
    class SetDropLast extends Modification {
        constructor() {
            super();
        }
        invoke(on) {
            return new khrysalis_runtime_1.EqualOverrideSet((0, iter_tools_es_1.toArray)(on).slice(0, -1));
        }
        invokeDefault() {
            return new khrysalis_runtime_1.EqualOverrideSet([]);
        }
        hashCode() {
            return 1;
        }
        equals(other) {
            return ((0, khrysalis_runtime_1.tryCastClass)(other, Modification.SetDropLast)) !== null;
        }
    }
    Modification.SetDropLast = SetDropLast;
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.SetPerElement
    class SetPerElement extends Modification {
        constructor(condition, modification) {
            super();
            this.condition = condition;
            this.modification = modification;
        }
        static propertyTypes(T) { return { condition: [Condition_1.Condition, T], modification: [Modification, T] }; }
        invoke(on) {
            return new khrysalis_runtime_1.EqualOverrideSet((0, iter_tools_es_1.execPipe)(on, (0, iter_tools_es_1.map)((it) => (this.condition.invoke(it) ? this.modification.invoke(it) : it)), iter_tools_es_1.toArray));
        }
        invokeDefault() {
            return new khrysalis_runtime_1.EqualOverrideSet([]);
        }
    }
    SetPerElement.properties = ["condition", "modification"];
    Modification.SetPerElement = SetPerElement;
    (0, khrysalis_runtime_1.setUpDataClass)(SetPerElement);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.Combine
    class Combine extends Modification {
        constructor(map) {
            super();
            this.map = map;
        }
        static propertyTypes(T) { return { map: [Map, [String], T] }; }
        invoke(on) {
            return new Map([...on, ...this.map]);
        }
        invokeDefault() {
            return this.map;
        }
    }
    Combine.properties = ["map"];
    Modification.Combine = Combine;
    (0, khrysalis_runtime_1.setUpDataClass)(Combine);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.ModifyByKey
    class ModifyByKey extends Modification {
        constructor(map) {
            super();
            this.map = map;
        }
        static propertyTypes(T) { return { map: [Map, [String], [Modification, T]] }; }
        invoke(on) {
            return new Map([...on, ...new Map((0, iter_tools_es_1.map)(x => [x[0], ((it) => {
                        var _a;
                        return (((_a = (() => {
                            var _a;
                            const temp31 = ((_a = on.get(it[0])) !== null && _a !== void 0 ? _a : null);
                            if (temp31 === null) {
                                return null;
                            }
                            return ((e) => (it[1].invoke(e)))(temp31);
                        })()) !== null && _a !== void 0 ? _a : it[1].invokeDefault()));
                    })(x)], this.map.entries()))]);
        }
        invokeDefault() {
            return new Map((0, iter_tools_es_1.map)(x => [x[0], ((it) => (it[1].invokeDefault()))(x)], this.map.entries()));
        }
    }
    ModifyByKey.properties = ["map"];
    Modification.ModifyByKey = ModifyByKey;
    (0, khrysalis_runtime_1.setUpDataClass)(ModifyByKey);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.RemoveKeys
    class RemoveKeys extends Modification {
        constructor(fields) {
            super();
            this.fields = fields;
        }
        static propertyTypes(T) { return { fields: [Set, [String]] }; }
        invoke(on) {
            return new Map((0, iter_tools_es_1.filter)(x => ((it) => (!(this.fields.has(it))))(x[0]), on.entries()));
        }
        invokeDefault() {
            return new Map([]);
        }
    }
    RemoveKeys.properties = ["fields"];
    Modification.RemoveKeys = RemoveKeys;
    (0, khrysalis_runtime_1.setUpDataClass)(RemoveKeys);
})(Modification = exports.Modification || (exports.Modification = {}));
(function (Modification) {
    //! Declares com.lightningkite.lightningdb.Modification.OnField
    class OnField extends Modification {
        constructor(key, modification) {
            super();
            this.key = key;
            this.modification = modification;
        }
        static propertyTypes(K, V) { return { key: [String, K, V], modification: [Modification, V] }; }
        invoke(on) {
            return (0, TProperty1Extensions_1.keySet)(on, this.key, this.modification.invoke((0, khrysalis_runtime_1.reflectiveGet)(on, this.key)));
        }
        invokeDefault() {
            throw "Cannot mutate a field that doesn't exist";
        }
    }
    OnField.properties = ["key", "modification"];
    Modification.OnField = OnField;
    (0, khrysalis_runtime_1.setUpDataClass)(OnField);
})(Modification = exports.Modification || (exports.Modification = {}));
//# sourceMappingURL=Modification.js.map