"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerHealth = exports.HealthStatus = void 0;
// Package: com.lightningkite.lightningserver.serverhealth
// Generated by Khrysalis - this file will be overwritten.
const core_1 = require("@js-joda/core");
const khrysalis_runtime_1 = require("@lightningkite/khrysalis-runtime");
//! Declares com.lightningkite.lightningserver.serverhealth.HealthStatus
class HealthStatus {
    constructor(level, checkedAt = core_1.Instant.now(), additionalMessage = null) {
        this.level = level;
        this.checkedAt = checkedAt;
        this.additionalMessage = additionalMessage;
    }
    static propertyTypes() { return { level: [HealthStatus.Level], checkedAt: [core_1.Instant], additionalMessage: [String] }; }
}
exports.HealthStatus = HealthStatus;
HealthStatus.properties = ["level", "checkedAt", "additionalMessage"];
(0, khrysalis_runtime_1.setUpDataClass)(HealthStatus);
(function (HealthStatus) {
    //! Declares com.lightningkite.lightningserver.serverhealth.HealthStatus.Level
    class Level {
        constructor(name, jsonName, color) {
            this.color = color;
            this.name = name;
            this.jsonName = jsonName;
        }
        static values() { return Level._values; }
        static valueOf(name) { return Level[name]; }
        toString() { return this.name; }
        toJSON() { return this.jsonName; }
        static fromJSON(key) { return Level._values.find(x => x.jsonName.toLowerCase() === key.toLowerCase()); }
    }
    Level.OK = new Level("OK", "OK", "green");
    Level.WARNING = new Level("WARNING", "WARNING", "yellow");
    Level.URGENT = new Level("URGENT", "URGENT", "orange");
    Level.ERROR = new Level("ERROR", "ERROR", "red");
    Level._values = [Level.OK, Level.WARNING, Level.URGENT, Level.ERROR];
    HealthStatus.Level = Level;
})(HealthStatus = exports.HealthStatus || (exports.HealthStatus = {}));
//! Declares com.lightningkite.lightningserver.serverhealth.ServerHealth
class ServerHealth {
    constructor(serverId, version, memory, features, loadAverageCpu) {
        this.serverId = serverId;
        this.version = version;
        this.memory = memory;
        this.features = features;
        this.loadAverageCpu = loadAverageCpu;
    }
    static propertyTypes() { return { serverId: [String], version: [String], memory: [ServerHealth.Memory], features: [Map, [String], [HealthStatus]], loadAverageCpu: [Number] }; }
}
exports.ServerHealth = ServerHealth;
ServerHealth.properties = ["serverId", "version", "memory", "features", "loadAverageCpu"];
(0, khrysalis_runtime_1.setUpDataClass)(ServerHealth);
(function (ServerHealth) {
    //! Declares com.lightningkite.lightningserver.serverhealth.ServerHealth.Memory
    class Memory {
        constructor(maxMem, totalMemory, freeMemory, systemAllocated, memUsagePercent) {
            this.maxMem = maxMem;
            this.totalMemory = totalMemory;
            this.freeMemory = freeMemory;
            this.systemAllocated = systemAllocated;
            this.memUsagePercent = memUsagePercent;
        }
        static propertyTypes() { return { maxMem: [Number], totalMemory: [Number], freeMemory: [Number], systemAllocated: [Number], memUsagePercent: [Number] }; }
    }
    Memory.properties = ["maxMem", "totalMemory", "freeMemory", "systemAllocated", "memUsagePercent"];
    ServerHealth.Memory = Memory;
    (0, khrysalis_runtime_1.setUpDataClass)(Memory);
})(ServerHealth = exports.ServerHealth || (exports.ServerHealth = {}));
//# sourceMappingURL=HealthStatus.js.map